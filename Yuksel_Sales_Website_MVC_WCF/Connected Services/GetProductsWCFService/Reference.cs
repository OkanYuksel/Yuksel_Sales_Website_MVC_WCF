//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Yuksel_Sales_Website_MVC_WCF.GetProductsWCFService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GetProductsWCFService.IGetProducts")]
    public interface IGetProducts {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetProducts/getProducts", ReplyAction="http://tempuri.org/IGetProducts/getProductsResponse")]
        string getProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetProducts/getProducts", ReplyAction="http://tempuri.org/IGetProducts/getProductsResponse")]
        System.Threading.Tasks.Task<string> getProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetProducts/buyProduct", ReplyAction="http://tempuri.org/IGetProducts/buyProductResponse")]
        string buyProduct(string product_code, string sales_count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetProducts/buyProduct", ReplyAction="http://tempuri.org/IGetProducts/buyProductResponse")]
        System.Threading.Tasks.Task<string> buyProductAsync(string product_code, string sales_count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetProducts/AddNewProduct", ReplyAction="http://tempuri.org/IGetProducts/AddNewProductResponse")]
        string AddNewProduct(string product_name, string product_description, double product_price, int product_stock_count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetProducts/AddNewProduct", ReplyAction="http://tempuri.org/IGetProducts/AddNewProductResponse")]
        System.Threading.Tasks.Task<string> AddNewProductAsync(string product_name, string product_description, double product_price, int product_stock_count);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGetProductsChannel : Yuksel_Sales_Website_MVC_WCF.GetProductsWCFService.IGetProducts, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProductsClient : System.ServiceModel.ClientBase<Yuksel_Sales_Website_MVC_WCF.GetProductsWCFService.IGetProducts>, Yuksel_Sales_Website_MVC_WCF.GetProductsWCFService.IGetProducts {
        
        public GetProductsClient() {
        }
        
        public GetProductsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GetProductsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetProductsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetProductsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string getProducts() {
            return base.Channel.getProducts();
        }
        
        public System.Threading.Tasks.Task<string> getProductsAsync() {
            return base.Channel.getProductsAsync();
        }
        
        public string buyProduct(string product_code, string sales_count) {
            return base.Channel.buyProduct(product_code, sales_count);
        }
        
        public System.Threading.Tasks.Task<string> buyProductAsync(string product_code, string sales_count) {
            return base.Channel.buyProductAsync(product_code, sales_count);
        }
        
        public string AddNewProduct(string product_name, string product_description, double product_price, int product_stock_count) {
            return base.Channel.AddNewProduct(product_name, product_description, product_price, product_stock_count);
        }
        
        public System.Threading.Tasks.Task<string> AddNewProductAsync(string product_name, string product_description, double product_price, int product_stock_count) {
            return base.Channel.AddNewProductAsync(product_name, product_description, product_price, product_stock_count);
        }
    }
}
